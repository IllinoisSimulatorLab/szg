import os
import sys

Import('buildFunc','srcDirname','buildEnv','pathDict','priorLibs','externalFlags')


libSrc = ( \
    'arSZGClient.cpp',
    'arMessageHandler.cpp',
    'arPhleetConfigLanguage.cpp',
    'arPhleetConfig.cpp',
    'arPhleetConnectionBroker.cpp',
    'arPhleetOSLanguage.cpp',
    'arPhleetTemplate.cpp'
  )

progNames = [
    'szgd',
    'szgserver',
    'dbatch',
    'dex',
    'dget',
    'dhunt',
    'dkill',
    'dlogin',
    'dlogout',
    'dps',
    'dset',
    'dwho',
    'dname',
    'dconfig',
    'daddinterface',
    'ddelinterface',
    'dports',
    'testservice',
    'testserviceclient',
    'dservices',
    'dpending',
    'dlocks',
    'testlock',
    'phleettest'
    ]

if sys.platform == 'win32':
  progNames.append('dtop')


szgHome = os.path.dirname( os.path.dirname( os.path.dirname( os.getcwd() ) ) )


# Call the generic directory-builder function
buildFunc( srcDirname, buildEnv, libSrc, progNames, priorLibs, pathDict )


if sys.platform != 'win32':
  # build dtop
  if 'curses' in externalFlags:
    cursesEnv = progEnv.Clone()
    if not cursesEnv.GetOption('clean'):
      cursesEnv.MergeFlags( externalFlags['curses'] )
    cursesProg = cursesEnv.Program( 'dtop.cpp' )
    Depends( cursesProg, priorLibs )
    cursesEnv.Install( pathDict['binPath'], cursesProg )
