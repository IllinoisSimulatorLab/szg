# This Makefile fragment encapsulates library scanning (where we decide
# which of the optional libraries is present). The file builds up several
# variables for use in other Makefiles:
#
# SZG_OPT_FLAGS: A series of compile flags that enable particular features in
#   the code.
# SZG_OPT_INCLUDE_FULL: A complete sequence of include directories for the
#   additional libraries.
# SZG_OPT_LIBS_FULL: The addition to the link line needed to use the additional
#   libraries.
# SZG_SHARED_COPY: Shared libraries that can be copied into the user's SZGBIN
#   directory via a Makefile target.
# SZG_SHARED_COPY_ACTION: OK, so we want to go ahead and copy the shared
#   libraries into the user's SZGBIN. However, we now run into the soname
#   issue on Unix. Consequently, some symbolc links need to be made. Which
#   leads us to this particular variable.
#
# Each additional library XXX also defines SZG_INCLUDE_XXX and SZG_LINK_XXX.
# The szg libraries are created incrementally and the optional linking/
# header search is limited to those portions that need them (like FMOD only
# for sound and framework).

SZG_SHARED_COPY_ACTION_BIN=\
  pushd $(SZG_BINDIR); \
  $(SZG_SHARED_COPY_ACTION) \
  popd

SZG_SHARED_COPY_ACTION_SDK=\
  pushd $(INSTALLDIR)/bin; \
  $(SZG_SHARED_COPY_ACTION) \
  popd

ifeq ($(strip $(MACHINE)), LINUX)
  GLUT_DIR := $(SZGEXTERNAL)/linux/glut-3.7
  INC_GLUT := $(wildcard $(GLUT_DIR)/include)
  LINK_GLUT := -lglut
  OBJ_GLUT := $(wildcard $(GLUT_DIR)/lib/libglut.so.3.7)

  FMOD_DIR := $(SZGEXTERNAL)/linux/fmod-3.7
  INC_FMOD := $(wildcard $(FMOD_DIR)/include)
  LINK_FMOD := -lfmod-3.70
  OBJ_FMOD := $(wildcard $(FMOD_DIR)/lib/libfmod-3.70.so)
  
  JPEG_DIR := $(SZGEXTERNAL)/linux/jpeg
  INC_JPEG := $(wildcard $(JPEG_DIR)/include)
  LIB_JPEG := $(wildcard $(JPEG_DIR)/lib/libjpeg.a)

  ZLIB_DIR := $(SZGEXTERNAL)/linux/zlib
  INC_ZLIB := $(wildcard $(ZLIB_DIR)/include)
  LIB_ZLIB := $(wildcard $(ZLIB_DIR)/lib/libz.a)

  3DS_DIR := $(SZGEXTERNAL)/linux/lib3ds
  INC_3DS := $(wildcard $(3DS_DIR)/include)
  LIB_3DS := $(wildcard $(3DS_DIR)/lib/lib3ds.a)
  
  VRPN_DIR := $(SZGEXTERNAL)/linux/vrpn
  INC_VRPN := $(wildcard $(VRPN_DIR)/include)
  LIB_VRPN := $(wildcard $(VRPN_DIR)/lib/libvrpn.a)

  # NOTE: GLUT is currently REQUIRED for szg operation. Consequently, for
  # this library only, we go ahead and provide a default link and include
  # value. (though the include value is blank, since, if you already
  # have it installed, then the header should be on the default include
  # path ).
  ifneq ($(strip $(OBJ_GLUT)),)
    SZG_SHARED_COPY += $(OBJ_GLUT)
    # NOTE: It is IMPORTANT that the symbolic links are RELATIVE and not
    # ABSOLUTE!
    SZG_SHARED_COPY_ACTION += \
      rm -f libglut.so.3; rm -f libglut.so; \
      ln -s libglut.so.3.7 libglut.so.3 ; \
      ln -s libglut.so.3 libglut.so ;
    SZG_INCLUDE_GLUT = -I$(INC_GLUT)
    SZG_OPT_INCLUDE_FULL += $(SZG_INCLUDE_GLUT)
    # NOTE: Sometimes we will want to be able to put shared libs in our *local*
    # bin directory only and sometimes we want to be able to have the
    # shared libs in their compiled-in directory only (which is the
    # purpose of -rpath)
    SZG_LINK_GLUT = -L$(GLUT_DIR)/lib -Wl,-rpath,$(GLUT_DIR)/lib $(LINK_GLUT)
    SZG_OPT_LIBS_FULL += $(SZG_LINK_GLUT)
  else
    SZG_LINK_GLUT = -lglut
    SZG_OPT_LIBS_FULL += $(SZG_LINK_GLUT)
  endif
  
  ifneq ($(strip $(INC_FMOD)),)
  ifneq ($(strip $(OBJ_FMOD)),)
    SZG_OPT_FLAGS += -DEnableSound
    SZG_SHARED_COPY += $(OBJ_FMOD)
    SZG_SHARED_COPY_ACTION += 
    SZG_INCLUDE_FMOD = -I$(INC_FMOD)
    SZG_OPT_INCLUDE_FULL += -I$(INC_FMOD)
    # NOTE: Sometimes we will want to be able to put shared libs in our *local*
    # bin directory only and sometimes we want to be able to have the
    # shared libs in their compiled-in directory only (which is the
    # purpose of -rpath)
    SZG_LINK_FMOD = -L$(FMOD_DIR)/lib -Wl,-rpath,$(FMOD_DIR)/lib $(LINK_FMOD)
    SZG_OPT_LIBS_FULL += $(SZG_LINK_FMOD)
  endif
  endif

  ifneq ($(strip $(INC_JPEG)),)
  ifneq ($(strip $(LIB_JPEG)),)
    SZG_OPT_FLAGS += -DEnableJPEG
    SZG_INCLUDE_JPEG = -I$(INC_JPEG)
    SZG_OPT_INCLUDE_FULL += -I$(INC_JPEG)
    SZG_LINK_JPEG = $(LIB_JPEG)
    SZG_OPT_LIBS_FULL += $(SZG_LINK_JPEG)
  endif
  endif

  ifneq ($(strip $(INC_3DS)),)
  ifneq ($(strip $(LIB_3DS)),)
    SZG_OPT_FLAGS += -DEnable3DS
    SZG_INCLUDE_3DS = -I$(INC_3DS)
    SZG_OPT_INCLUDE_FULL += -I$(INC_3DS)
    SZG_LINK_3DS = $(LIB_3DS)
    SZG_OPT_LIBS_FULL += $(SZG_LINK_3DS)
  endif
  endif

  ifneq  ($(strip $(INC_ZLIB)),)
  ifneq  ($(strip $(LIB_ZLIB)),) 
    # Only used in the Quake3 level viewer demos. Consequently, do not add
    # to everything.
    SZG_OPT_FLAGS += -DEnableZlib
    SZG_INCLUDE_ZLIB = -I$(INC_ZLIB)
    SZG_LINK_ZLIB = $(LIB_ZLIB)
  endif
  endif 

  ifneq ($(strip $(INC_VRPN)),)
  ifneq ($(strip $(LIB_VRPN)),)
    # NOTE: vrpn is only referenced in a arInputSource plugin.
    # Consequrntly, it should NOT be added to the full includes or full libs.
    SZG_OPT_FLAGS += -DEnable_VRPN
    SZG_INCLUDE_VRPN = -I$(INC_VRPN)
    SZG_LINK_VRPN = $(LIB_VRPN)
  endif
  endif

# Dropping the CG experiment, for the time being.
# Leave this comment plus those following so that things can be easily
# reconstructed, if desired.
#  INCCG := 
#  LIBCG := 
#  LIBCGGL :=

#  INCCG := $(wildcard $(SZGEXTERNAL)/include/Cg)
#  LIBCG := $(wildcard $(SZGEXTERNAL)/lib/Cg/linux/libCg.so)
#  LIBCGGL := $(wildcard $(SZGEXTERNAL)/lib/Cg/linux/libCgGL.so)
#  ifneq ($(strip $(INCCG)),)
#  ifneq ($(strip $(LIBCG)),)
#  ifneq ($(strip $(LIBCGGL)),)
#    # libCg include file AND library exist.
#    COMPILE_FLAGS += -DUSE_CG
#    COMPILE_FLAGS_DEBUG += -DUSE_CG
#    SZG_INCLUDE_CG = -I$(INCCG)
#    SZG_OPT_INCLUDE_FULL += -I$(INCCG)
#    SZG_OPT_LIBS_FULL += $(LIBCG) $(LIBCGGL)
#  endif
#  endif
#  endif

endif

ifeq ($(strip $(MACHINE)), WIN32)

  STLPORT_DIR := $(SZGEXTERNAL)/win32/STLport
  LIB_STLPORT := $(wildcard $(STLPORT_DIR)/lib)
  OBJ1_STLPORT := $(wildcard $(STLPORT_DIR)/lib/stlport_vc646.dll)
  OBJ2_STLPORT := $(wildcard $(STLPORT_DIR)/lib/stlport_vc6_stldebug46.dll)

  GLUT_DIR := $(SZGEXTERNAL)/win32/glut-3.7
  INC_GLUT := $(wildcard $(GLUT_DIR)/include)
  LINK_GLUT := glut32.lib
  OBJ_GLUT := $(wildcard $(GLUT_DIR)/lib/glut32.dll)

  # Some windows installations lack glext.h, which is needed for the
  # q33 demo. Allow it to be added in SZGEXTERNAL
  GL_EXT_DIR := $(wildcard $(SZGEXTERNAL)/win32/GL/include)

  FMOD_DIR := $(SZGEXTERNAL)/win32/fmod-3.7
  INC_FMOD := $(wildcard $(FMOD_DIR)/include)
  LINK_FMOD := $(wildcard $(FMOD_DIR)/lib/fmodvc.lib)
  OBJ_FMOD := $(wildcard $(FMOD_DIR)/lib/fmod.dll)

  JPEG_DIR := $(SZGEXTERNAL)/win32/jpeg
  INC_JPEG := $(wildcard $(JPEG_DIR)/include)
  LIB_JPEG := $(wildcard $(JPEG_DIR)/lib/libjpeg.lib)

  3DS_DIR := $(SZGEXTERNAL)/win32/lib3ds
  INC_3DS := $(wildcard $(3DS_DIR)/include)
  LIB_3DS := $(wildcard $(3DS_DIR)/lib/lib3ds.lib)

  SAPI_DIR := $(SZGEXTERNAL)/win32/sapi-5.1
  INC_SAPI := $(wildcard $(SAPI_DIR)/include)
  LIB_SAPI := $(wildcard $(SAPI_DIR)/lib/sapi.lib)

  ZLIB_DIR := $(SZGEXTERNAL)/win32/zlib
  INC_ZLIB := $(wildcard $(ZLIB_DIR)/include)
  LIB_ZLIB := $(wildcard $(ZLIB_DIR)/lib/zlib.lib)

  WIN_BIRD_DIR := $(SZGEXTERNAL)/win32/ascension
  INC_WIN_BIRD := $(wildcard $(WIN_BIRD_DIR)/include)
  LIB_WIN_BIRD := $(wildcard $(WIN_BIRD_DIR)/lib/Bird.lib)
  OBJ_WIN_BIRD := $(wildcard $(WIN_BIRD_DIR)/lib/Bird.dll)

  EVART_DIR := $(SZGEXTERNAL)/win32/evart
  INC_EVART := $(wildcard $(EVART_DIR)/include)
  LIB_EVART := $(wildcard $(EVART_DIR)/lib/macrtcom.lib)
  OBJ_EVART := $(wildcard $(EVART_DIR)/lib/macrtcom.dll)

  # If STLport is available, we want to copy its objects to SZG_BINDIR
  # in the install-shared target.
  ifneq ($(strip $(LIB_STLPORT)),)
    SZG_SHARED_COPY += $(OBJ1_STLPORT) $(OBJ2_STLPORT)
  endif

  # NOTE: GLUT is currently REQUIRED for szg operation. Consequently, for
  # this library only, we go ahead and provide a default link and include
  # value. (though the include value is blank, since, if you already
  # have it installed, then the header should be on the default include
  # path ).
  ifneq ($(strip $(OBJ_GLUT)),)
    SZG_SHARED_COPY += $(OBJ_GLUT)
    # Since Windows does not have soname's, we don't need to construct
    # symbolic links. So no need to add to SZG_SHARED_COPY_ACTION
    SZG_INCLUDE_GLUT = -I$(INC_GLUT)
    SZG_OPT_INCLUDE_FULL += $(SZG_INCLUDE_GLUT)
    # Because of the different design of windows, do not need to set
    # runtime paths for executables, consequently SZG_LINK_GLUT is simpler
    # than in the Linux/SGI cases.
    SZG_LINK_GLUT = $(GLUT_DIR)/lib/$(LINK_GLUT)
    SZG_OPT_LIBS_FULL += $(SZG_LINK_GLUT)
  else
    SZG_LINK_GLUT = $(LINK_GLUT)
    SZG_OPT_LIBS_FULL += $(SZG_LINK_GLUT)
  endif

  # Inclusion of glext.h for q33
  ifneq ($(strip $(GL_EXT_DIR)),)
    SZG_OPT_INCLUDE_FULL += -I$(GL_EXT_DIR)
  endif
	
  ifneq ($(strip $(INC_FMOD)),)
  ifneq ($(strip $(LINK_FMOD)),)
    SZG_OPT_FLAGS += -D "EnableSound"
    SZG_SHARED_COPY += $(OBJ_FMOD)
    SZG_INCLUDE_FMOD = -I$(INC_FMOD)
    SZG_OPT_INCLUDE_FULL += -I$(INC_FMOD)
    SZG_LINK_FMOD = $(LINK_FMOD) 
    SZG_OPT_LIBS_FULL += $(SZG_LINK_FMOD)
  endif
  endif

  ifneq ($(strip $(INC_JPEG)),)
  ifneq ($(strip $(LIB_JPEG)),)
    SZG_OPT_FLAGS += -D "EnableJPEG"
    SZG_INCLUDE_JPEG = -I$(INC_JPEG)
    SZG_OPT_INCLUDE_FULL += -I$(INC_JPEG)
    SZG_LINK_JPEG = $(LIB_JPEG)
    SZG_OPT_LIBS_FULL += $(SZG_LINK_JPEG)
  endif
  endif

  ifneq ($(strip $(INC_3DS)),)
  ifneq ($(strip $(LIB_3DS)),)
    # lib3DS include file AND library exist.
    SZG_OPT_FLAGS += -D "Enable3DS"
    SZG_INCLUDE_3DS = -I$(INC_3DS)
    SZG_OPT_INCLUDE_FULL += -I$(INC_3DS)
    SZG_LINK_3DS = $(LIB_3DS)
    SZG_OPT_LIBS_FULL += $(SZG_LINK_3DS)
  endif
  endif

  ifneq ($(strip $(INC_SAPI)),)
  ifneq ($(strip $(LIB_SAPI)),)
    SZG_OPT_FLAGS += -D "EnableSpeech"
    SZG_INCLUDE_SAPI = -I$(INC_SAPI)
    SZG_OPT_INCLUDE_FULL += -I$(INC_SAPI)
    SZG_LINK_SAPI = ole32.lib $(LIB_SAPI)
    SZG_OPT_LIBS_FULL += $(SZG_LINK_SAPI)
  endif
  endif

  ifneq  ($(strip $(INC_ZLIB)),)
  ifneq  ($(strip $(LIB_ZLIB)),) 
    # Only used in the Quake3 level viewer demos. Consequently, do not add
    # to everything.
    SZG_OPT_FLAGS += -D "EnableZlib"
    SZG_INCLUDE_ZLIB = -I$(INC_ZLIB)
    SZG_LINK_ZLIB = $(LIB_ZLIB)
  endif
  endif

# NOTE: This only applies to one of the dynamically loadable input drivers.
# Hence it does not add anything to the global link lines/includes.
  ifneq ($(strip $(INC_WIN_BIRD)),)
  ifneq ($(strip $(LIB_WIN_BIRD)),)
    SZG_OPT_FLAGS += -D "EnableBirdWinDriver"
    SZG_SHARED_COPY += $(OBJ_WIN_BIRD)
    SZG_INCLUDE_WIN_BIRD = -I$(INC_WIN_BIRD)
    SZG_LINK_WIN_BIRD = $(LIB_WIN_BIRD)
  endif
  endif

# NOTE: This only applies to one of the dynamically loadable input drivers.
# Hence it does not add anything to the global link lines/includes.
  ifneq ($(strip $(INC_EVART)),)
  ifneq ($(strip $(LIB_EVART)),)
    SZG_OPT_FLAGS += -D "EnableEVaRT"
    SZG_SHARED_COPY += $(OBJ_EVART)
    SZG_INCLUDE_EVART = -I$(INC_EVART)
    SZG_LINK_EVART = $(LIB_EVART)
  endif
  endif

# Dropping the CG experiment, for the time being.
#  INCCG := 
#  LIBCG := 
#  LIBCGGL :=

#  INCCG := $(wildcard $(SZGEXTERNAL)/include/Cg)
#  LIBCG := $(wildcard $(SZGEXTERNAL)/lib/Cg/win32/libCg.lib)
#  LIBCGGL := $(wildcard $(SZGEXTERNAL)/lib/Cg/win32/libCgGL.lib)

#  ifneq ($(strip $(INCCG)),)
#  ifneq ($(strip $(LIBCG)),)
#  ifneq ($(strip $(LIBCGGL)),)
#    COMPILE_FLAGS += -D "USE_CG"
#    COMPILE_FLAGS_DEBUG += -D "USE_CG"
#    SZG_INCLUDE_CG = -I$(INCCG)
#    SZG_OPT_INCLUDE_FULL += -I$(INCCG)
#    SZG_OPT_LIBS_FULL += $(LIBCG) $(LIBCGGL)
#  endif
#  endif
#  endif

endif

ifeq ($(strip $(MACHINE)), DARWIN)

  FMOD_DIR := $(SZGEXTERNAL)/darwin/fmod-3.7
  INC_FMOD := $(wildcard $(FMOD_DIR)/include)
  LINK_FMOD := $(wildcard $(FMOD_DIR)/lib/libfmod.a)

  JPEG_DIR := $(SZGEXTERNAL)/darwin/jpeg
  INC_JPEG := $(wildcard $(JPEG_DIR)/include)
  LIB_JPEG := $(wildcard $(JPEG_DIR)/lib/libjpeg.a)
  
  ifneq ($(strip $(INC_FMOD)),)
  ifneq ($(strip $(LINK_FMOD)),)
    SZG_OPT_FLAGS += -DEnableSound
    SZG_INCLUDE_FMOD = -I$(INC_FMOD)
    SZG_OPT_INCLUDE_FULL += -I$(INC_FMOD)
    SZG_LINK_FMOD = $(LINK_FMOD) -framework Carbon
    SZG_OPT_LIBS_FULL += $(SZG_LINK_FMOD)
  endif
  endif

  ifneq ($(strip $(INC_JPEG)),)
  ifneq ($(strip $(LIB_JPEG)),)
    SZG_OPT_FLAGS += -DEnableJPEG
    SZG_INCLUDE_JPEG = -I$(INC_JPEG)
    SZG_OPT_INCLUDE_FULL += -I$(INC_JPEG)
    SZG_LINK_JPEG = $(LIB_JPEG)
    SZG_OPT_LIBS_FULL += $(SZG_LINK_JPEG)
  endif
  endif

  # zlib is only used for the Quake 3 level viewer demos. Furthermore,
  # this library is standard with OS X. Consequently, don't even bother
  # to check for its existence.
  SZG_INCLUDE_ZLIB =
  SZG_LINK_ZLIB = -lz

endif

ifeq ($(strip $(MACHINE)), SGI)

  # NOTE: If we have put the glut files into SZGEXTERNAL, then use those.
  # Otherwise, we should assume that everything is present in the standard
  # locations.
  GLUT_DIR := $(SZGEXTERNAL)/sgi/glut-3.7
  INC_GLUT := $(wildcard $(GLUT_DIR)/include)
  LIB_GLUT := $(wildcard $(GLUT_DIR)/lib/libglut.a)

  ifneq ($(strip $(LIB_GLUT)),)
    SZG_INCLUDE_GLUT = -I$(INC_GLUT)
    SZG_OPT_INCLUDE_FULL += $(SZG_INCLUDE_GLUT)
    SZG_LINK_GLUT = $(LIB_GLUT)
    SZG_OPT_LIBS_FULL += $(SZG_LINK_GLUT)
  else
    SZG_LINK_GLUT = -lglut
    SZG_OPT_LIBS_FULL += $(SZG_LINK_GLUT)
  endif
  
endif

