# This Makefile fragment encapsulates library scanning (where we decide
# which of the optional libraries is present). Note that neither of the 
# sgi platforms supports any of the optional features
# The wildcard operator resolves to the empty string, if the file is missing.

# BUG BUG BUG BUG BUG BUG BUG BUG BUG BUG
# The library scanning needs to be modified so that absolute paths to shared
# objects are NOT used, which makes the executables MUCH less portable than
# they need to be across Linux (for instance) systems, because the executable
# then depends on the shared library being in a certain spot in the 
# filesystem (which spot might not exist from box to box).

ifeq ($(strip $(MACHINE)), LINUX)
  INC_FMOD := $(wildcard $(SZGEXTERNAL)/include/fmod-3.7)
  LIB_FMOD := $(wildcard $(SZGEXTERNAL)/lib/fmod-3.7/linux/libfmod-3.70.so)

  INC_JPEG := $(wildcard $(SZGEXTERNAL)/include/jpeg/linux)
  LIB_JPEG := $(wildcard $(SZGEXTERNAL)/lib/jpeg/linux/libjpeg.a)

  INC_ZLIB := $(wildcard $(SZGEXTERNAL)/include/zlib/linux)
  LIB_ZLIB := $(wildcard $(SZGEXTERNAL)/lib/zlib/linux/libz.a)

  INC_WIN_BIRD := 
  LIB_WIN_BIRD := 

  INC_EVART :=
  LIB_EVART :=

  INC_3DS := $(wildcard $(SZGEXTERNAL)/include/lib3ds)
  LIB_3DS := $(wildcard $(SZGEXTERNAL)/lib/lib3ds/linux/lib3ds.a)

# Dropping the CG experiment, for the time being.
  INCCG := 
  LIBCG := 
  LIBCGGL :=

#  INCCG := $(wildcard $(SZGEXTERNAL)/include/Cg)
#  LIBCG := $(wildcard $(SZGEXTERNAL)/lib/Cg/linux/libCg.so)
#  LIBCGGL := $(wildcard $(SZGEXTERNAL)/lib/Cg/linux/libCgGL.so)
  
  INC_VRPN := $(wildcard $(SZGEXTERNAL)/include/vrpn)
  LIB_VRPN := $(wildcard $(SZGEXTERNAL)/lib/vrpn/linux/libvrpn.a)

  ifneq ($(strip $(INC_FMOD)),)
  ifneq ($(strip $(LIB_FMOD)),)
    # FMOD include file AND library exist.
    COMPILE_FLAGS += -DEnableSound
    COMPILE_FLAGS_DEBUG += -DEnableSound
    SZG_INCLUDE_FMOD = -I$(INC_FMOD)
    SZG_OPT_INCLUDE_FULL += -I$(INC_FMOD)
    SZG_OPT_LIBS_FULL += $(LIB_FMOD)
  endif
  endif

  ifneq ($(strip $(INC_JPEG)),)
  ifneq ($(strip $(LIB_JPEG)),)
    # libjpeg and headers exist
    COMPILE_FLAGS += -DEnableJPEG
    COMPILE_FLAGS_DEBUG += -DEnableJPEG
    SZG_INCLUDE_JPEG = -I$(INC_JPEG)
    SZG_OPT_INCLUDE_FULL += -I$(INC_JPEG)
    SZG_OPT_LIBS_FULL += $(LIB_JPEG)
  endif
  endif

  ifneq  ($(strip $(INC_ZLIB)),)
  ifneq  ($(strip $(LIB_ZLIB)),) 
    # library and headers exist
    COMPILE_FLAGS += -DEnableZlib
    COMPILE_FLAGS_DEBUG += -DEnableZlib
    SZG_INCLUDE_ZLIB = -I$(INC_ZLIB)
    SZG_OPT_INCLUDE_FULL += -I$(INC_ZLIB)
    SZG_OPT_LIBS_FULL += $(LIB_ZLIB)
  endif
  endif

  ifneq ($(strip $(INC_3DS)),)
  ifneq ($(strip $(LIB_3DS)),)
    # lib3DS include file AND library exist.
    COMPILE_FLAGS += -DEnable3DS
    COMPILE_FLAGS_DEBUG += -DEnable3DS
    SZG_INCLUDE_3DS = -I$(INC_3DS)
    SZG_OPT_INCLUDE_FULL += -I$(INC_3DS)
    SZG_OPT_LIBS_FULL += $(LIB_3DS)
  endif
  endif
  
  ifneq ($(strip $(INCCG)),)
  ifneq ($(strip $(LIBCG)),)
  ifneq ($(strip $(LIBCGGL)),)
    # libCg include file AND library exist.
    COMPILE_FLAGS += -DUSE_CG
    COMPILE_FLAGS_DEBUG += -DUSE_CG
    SZG_INCLUDE_CG = -I$(INCCG)
    SZG_OPT_INCLUDE_FULL += -I$(INCCG)
    SZG_OPT_LIBS_FULL += $(LIBCG) $(LIBCGGL)
  endif
  endif
  endif

  ifneq ($(strip $(INC_VRPN)),)
  ifneq ($(strip $(LIB_VRPN)),)
    # libvrpn include file AND library exist.
    COMPILE_FLAGS += -DEnable_VRPN
    COMPILE_FLAGS_DEBUG += -DEnable_VRPN
    SZG_INCLUDE_VRPN = -I$(INC_VRPN)
    SZG_OPT_INCLUDE_FULL += -I$(INC_VRPN)
    SZG_OPT_LIBS_FULL += $(LIB_VRPN)
  endif
  endif

endif

ifeq ($(strip $(MACHINE)), WIN32)
  INC_FMOD := $(wildcard $(SZGEXTERNAL)/include/fmod-3.7)
  LIB_FMOD := $(wildcard $(SZGEXTERNAL)/lib/fmod-3.7/win32/fmodvc.lib)

  INC_JPEG := $(wildcard $(SZGEXTERNAL)/include/jpeg/win32)
  LIB_JPEG := $(wildcard $(SZGEXTERNAL)/lib/jpeg/win32/libjpeg.lib)

  INC_ZLIB := $(wildcard $(SZGEXTERNAL)/include/zlib/win32)
  LIB_ZLIB := $(wildcard $(SZGEXTERNAL)/lib/zlib/win32/zlib.lib)

  INC_WIN_BIRD := $(wildcard $(SZGEXTERNAL)/include/ascension)
  LIB_WIN_BIRD := $(wildcard $(SZGEXTERNAL)/lib/ascension/win32/Bird.lib)

  INC_EVART := $(wildcard $(SZGEXTERNAL)/include/evart)
  LIB_EVART := $(wildcard $(SZGEXTERNAL)/lib/evart/win32/macrtcom.lib)

  INC_3DS := $(wildcard $(SZGEXTERNAL)/include/lib3ds)
  LIB_3DS := $(wildcard $(SZGEXTERNAL)/lib/lib3ds/win32/lib3ds.lib)

# Dropping the CG experiment, for the time being.
  INCCG := 
  LIBCG := 
  LIBCGGL :=

#  INCCG := $(wildcard $(SZGEXTERNAL)/include/Cg)
#  LIBCG := $(wildcard $(SZGEXTERNAL)/lib/Cg/win32/libCg.lib)
#  LIBCGGL := $(wildcard $(SZGEXTERNAL)/lib/Cg/win32/libCgGL.lib)

  INC_SAPI := $(wildcard $(SZGEXTERNAL)/include/sapi-5.1)
  LIB_SAPI := $(wildcard $(SZGEXTERNAL)/lib/sapi-5.1/sapi.lib)
  LINK_LIBS_SAPI := ole32.lib
	
  ifneq ($(strip $(INC_FMOD)),)
  ifneq ($(strip $(LIB_FMOD)),)
    # FMOD include file AND library exist.
    COMPILE_FLAGS += -D "EnableSound"
    COMPILE_FLAGS_DEBUG += -D "EnableSound"
    SZG_INCLUDE_FMOD = -I$(INC_FMOD)
    SZG_OPT_INCLUDE_FULL += -I$(INC_FMOD)
    SZG_OPT_LIBS_FULL += $(LIB_FMOD) 
  endif
  endif

  ifneq ($(strip $(INC_JPEG)),)
  ifneq ($(strip $(LIB_JPEG)),)
    # libjpeg and headers exist
    COMPILE_FLAGS += -D "EnableJPEG"
    COMPILE_FLAGS_DEBUG += -D "EnableJPEG"
    SZG_INCLUDE_JPEG = -I$(INC_JPEG)
    SZG_OPT_INCLUDE_FULL += -I$(INC_JPEG)
    SZG_OPT_LIBS_FULL += $(LIB_JPEG)
  endif
  endif

  ifneq  ($(strip $(INC_ZLIB)),)
  ifneq  ($(strip $(LIB_ZLIB)),) 
    # library and headers exist
    COMPILE_FLAGS += -D "EnableZlib"
    COMPILE_FLAGS_DEBUG += -D "EnableZlib"
    SZG_INCLUDE_ZLIB = -I$(INC_ZLIB)
    SZG_OPT_INCLUDE_FULL += -I$(INC_ZLIB)
    SZG_OPT_LIBS_FULL += $(LIB_ZLIB)
  endif
  endif

  ifneq ($(strip $(INCCG)),)
  ifneq ($(strip $(LIBCG)),)
  ifneq ($(strip $(LIBCGGL)),)
    # libCg include file AND library exist.
    COMPILE_FLAGS += -D "USE_CG"
    COMPILE_FLAGS_DEBUG += -D "USE_CG"
    SZG_INCLUDE_CG = -I$(INCCG)
    SZG_OPT_INCLUDE_FULL += -I$(INCCG)
    SZG_OPT_LIBS_FULL += $(LIBCG) $(LIBCGGL)
  endif
  endif
  endif

  ifneq ($(strip $(INC_3DS)),)
  ifneq ($(strip $(LIB_3DS)),)
    # lib3DS include file AND library exist.
    COMPILE_FLAGS += -D "Enable3DS"
    COMPILE_FLAGS_DEBUG += -D "Enable3DS"
    SZG_INCLUDE_3DS = -I$(INC_3DS)
    SZG_OPT_INCLUDE_FULL += -I$(INC_3DS)
    SZG_OPT_LIBS_FULL += $(LIB_3DS)
  endif
  endif

# NOTE: This only applies to one of the dynamically loadable input drivers.
# Hence it does not add anything to the global link lines/includes.
  ifneq ($(strip $(INC_WIN_BIRD)),)
  ifneq ($(strip $(LIB_WIN_BIRD)),)
    # FoB include file AND library exist.
    COMPILE_FLAGS += -D "EnableBirdWinDriver"
    COMPILE_FLAGS_DEBUG += -D "EnableBirdWinDriver"
    SZG_INCLUDE_WIN_BIRD = -I$(INC_WIN_BIRD)
  endif
  endif

# NOTE: This only applies to one of the dynamically loadable input drivers.
# Hence it does not add anything to the global link lines/includes.
  ifneq ($(strip $(INC_EVART)),)
  ifneq ($(strip $(LIB_EVART)),)
    # EVaRT include and library exist
    COMPILE_FLAGS += -D "EnableEVaRT"
    COMPILE_FLAGS_DEBUG += -D "EnableEVaRT"
    SZG_INCLUDE_EVART = -I$(INC_EVART)
  endif
  endif
	
  ifneq ($(strip $(INC_SAPI)),)
  ifneq ($(strip $(LIB_SAPI)),)
    # SAPI include file AND library exist.
    COMPILE_FLAGS += -D "EnableSpeech"
    COMPILE_FLAGS_DEBUG += -D "EnableSpeech"
    SZG_INCLUDE_SAPI = -I$(INC_SAPI)
    SZG_OPT_INCLUDE_FULL += -I$(INC_SAPI)
    # DOH! It is a little obnoxious to add add ole32 this way...
    LIB_SAPI += ole32.lib
    SZG_OPT_LIBS_FULL += $(LIB_SAPI)
  endif
  endif

endif

ifeq ($(strip $(MACHINE)), DARWIN)
  INC_FMOD := $(wildcard $(SZGEXTERNAL)/include/fmod-3.7)
  LIB_FMOD := $(wildcard $(SZGEXTERNAL)/lib/fmod-3.7/darwin/libfmod.a)

  INC_JPEG := $(wildcard $(SZGEXTERNAL)/include/jpeg/darwin)
  LIB_JPEG := $(wildcard $(SZGEXTERNAL)/lib/jpeg/darwin/libjpeg.a)

  INC_ZLIB := $(wildcard $(SZGEXTERNAL)/include/zlib/darwin)
  LIB_ZLIB := $(wildcard $(SZGEXTERNAL)/lib/zlib/darwin/libz.a)

  INC_WIN_BIRD := 
  LIB_WIN_BIRD := 

  INC_EVART :=
  LIB_EVART :=

  INC_3DS :=
  LIB_3DS :=
  
  ifneq ($(strip $(INC_FMOD)),)
  ifneq ($(strip $(LIB_FMOD)),)
    # FMOD include file AND library exist.
    COMPILE_FLAGS += -DEnableSound
    COMPILE_FLAGS_DEBUG += -DEnableSound
    SZG_INCLUDE_FMOD = -I$(INC_FMOD)
    SZG_OPT_INCLUDE_FULL += -I$(INC_FMOD)
    LIB_FMOD += -framework Carbon
    SZG_OPT_LIBS_FULL += $(LIB_FMOD)
  endif
  endif

  ifneq ($(strip $(INC_JPEG)),)
  ifneq ($(strip $(LIB_JPEG)),)
    # libjpeg and headers exist
    COMPILE_FLAGS += -DEnableJPEG
    COMPILE_FLAGS_DEBUG += -DEnableJPEG
    SZG_INCLUDE_JPEG = -I$(INC_JPEG)
    SZG_OPT_INCLUDE_FULL += -I$(INC_JPEG)
    SZG_OPT_LIBS_FULL += $(LIB_JPEG)
  endif
  endif

  ifneq  ($(strip $(INC_ZLIB)),)
  ifneq  ($(strip $(LIB_ZLIB)),) 
    # library and headers exist
    COMPILE_FLAGS += -DEnableZlib
    COMPILE_FLAGS_DEBUG += -DEnableZlib
    SZG_INCLUDE_ZLIB = -I$(INC_ZLIB)
    SZG_OPT_INCLUDE_FULL += -I$(INC_ZLIB)
    SZG_OPT_LIBS_FULL += $(LIB_ZLIB)
  endif
  endif

endif

# While Irix is not a primary platform, it is still useful from time to time.
ifeq ($(strip $(MACHINE)), MIPS3)
  INC_FMOD := 
  LIB_FMOD := 

  INC_WIN_BIRD := 
  LIB_WIN_BIRD := 

  INC_EVART :=
  LIB_EVART :=

  INC_3DS :=
  LIB_3DS :=
endif

# While Irix is not a primary platform, it is still useful from time to time.
ifeq ($(strip $(MACHINE)), MIPS4)
  INC_FMOD := 
  LIB_FMOD := 

  INC_WIN_BIRD := 
  LIB_WIN_BIRD := 

  INC_EVART :=
  LIB_EVART :=

  INC_3DS :=
  LIB_3DS :=
endif
