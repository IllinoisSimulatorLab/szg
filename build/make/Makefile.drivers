SZG_INCLUDE_STYLE = INTERNAL
SZG_COPY_LIB = TRUE

VPATH = ../../../src/drivers
include $(SZGHOME)/build/make/Makefile.vars

OBJS := \
  arInputFactory$(OBJ_SUFFIX) \
  arEventUtilities$(OBJ_SUFFIX) \
  arFileSink$(OBJ_SUFFIX) \
  arFileSource$(OBJ_SUFFIX) \
  arGenericDriver$(OBJ_SUFFIX) \
  arIOFilter$(OBJ_SUFFIX) \
  arInputEvent$(OBJ_SUFFIX) \
  arInputEventQueue$(OBJ_SUFFIX) \
  arInputLanguage$(OBJ_SUFFIX) \
  arInputNode$(OBJ_SUFFIX) \
  arInputSource$(OBJ_SUFFIX) \
  arInputState$(OBJ_SUFFIX) \
  arNetInputSink$(OBJ_SUFFIX) \
  arNetInputSource$(OBJ_SUFFIX) \
  arPForth$(OBJ_SUFFIX) \
  arPForthDatabaseVocabulary$(OBJ_SUFFIX) \
  arPForthEventVocabulary$(OBJ_SUFFIX) \
  arPForthFilter$(OBJ_SUFFIX) \
  arPForthStandardVocabulary$(OBJ_SUFFIX) \

# arGenericDriver is in OBJS not OBJS_DRIVER, because
# it gets built into libarDrivers.

OBJS_DRIVER := \
  arBirdWinDriver$(OBJ_SUFFIX) \
  arEVaRTDriver$(OBJ_SUFFIX) \
  arFOBDriver$(OBJ_SUFFIX) \
  arFaroDriver$(OBJ_SUFFIX) \
  arIntersenseDriver$(OBJ_SUFFIX) \
  arLogitechDriver$(OBJ_SUFFIX) \
  arMotionstarDriver$(OBJ_SUFFIX) \
  arPPTDriver$(OBJ_SUFFIX) \
  arReactionTimerDriver$(OBJ_SUFFIX) \
  arSharedMemDriver$(OBJ_SUFFIX) \
  arSharedMemSinkDriver$(OBJ_SUFFIX) \
  arUSBDriver$(OBJ_SUFFIX) \
  arVRPNDriver$(OBJ_SUFFIX) \
  \
  arConstantHeadFilter$(OBJ_SUFFIX) \
  arFaroCalFilter$(OBJ_SUFFIX) \
  arTrackCalFilter$(OBJ_SUFFIX) \

ifneq ($(strip $(SZG_COMPILER)),MINGW)
  OBJS_DRIVER += \
  arSpacepadDriver$(OBJ_SUFFIX) \
  arJoystickDriver$(OBJ_SUFFIX) \
  arIntelGamepadDriver$(OBJ_SUFFIX)
endif

LIBS_DRIVER = $(subst $(OBJ_SUFFIX),$(PLUGIN_SUFFIX),$(OBJS_DRIVER))

# Explicit definitions, replacing the otherwise generic ones in Makefile.defines

SZG_INCLUDE = \
  -I$(SZGHOME)/src/language \
  -I$(SZGHOME)/src/phleet \
  -I$(SZGHOME)/src/math \
  $(SZG_DLL_INCLUDE)
SZG_LINK_LIBS = $(GENERAL_LIBS)
SZG_OPTIONAL_LIBS = 
SZG_LIBRARY_LIBS = \
  $(MATH_LIB_STRING) \
  $(PHLEET_LIB_STRING) \
  $(LANGUAGE_LIB_STRING)
SZG_LIBRARY_DEPS = \
  $(MATH_DEP_STRING) \
  $(PHLEET_DEP_STRING) \
  $(LANGUAGE_DEP_STRING)
SZG_CURRENT_LIB_SHORT_NAME = arDrivers
ifeq ($(strip $(MACHINE)),WIN32)
  COMPILE_FLAGS += -D "SZG_COMPILING_DRIVERS"
ifneq ($(strip $(SZG_COMPILER)),MINGW)
  LINK_FLAGS += /stack:4000000
endif
endif

# Libs in Win32 and unix need different orders.

ifeq ($(strip $(MACHINE)),WIN32)
  PRE_LINK_VRPN = $(SZG_LINK_VRPN)
  POST_LINK_VRPN =

  PRE_LINK_EVART = $(SZG_LINK_EVART)
  POST_LINK_EVART =

  PRE_LINK_BIRDWIN = $(SZG_LINK_WIN_BIRD)
  POST_LINK_BIRDWIN =

  PRE_LINK_GAMEPAD = $(GAMEPAD_LIBS)
  POST_LINK_GAMEPAD =

  POST_LINK_TIMER = winmm.lib
else
  PRE_LINK_VRPN = 
  POST_LINK_VRPN = $(SZG_LINK_VRPN)

  PRE_LINK_EVART =
  POST_LINK_EVART = $(SZG_LINK_EVART)

  PRE_LINK_BIRDWIN = 
  POST_LINK_BIRDWIN = $(SZG_LINK_WIN_BIRD)
  
  PRE_LINK_GAMEPAD =
  POST_LINK_GAMEPAD = $(GAMEPAD_LIBS)
endif


ifeq ($(strip $(SZG_LINKING)), STATIC) 
  COMPILE_FLAGS += -D "NOFACTORY"
  OBJS += $(OBJS_DRIVER)
  OBJS += isense$(OBJ_SUFFIX)

  SZG_INCLUDE += \
    $(SZG_INCLUDE_WIN_BIRD) \
    $(SZG_INCLUDE_EVART) \
    $(SZG_INCLUDE_VRPN)

  PRE_LINK_LINE_EXE += \
    $(PRE_LINK_BIRDWIN) \
    $(PRE_LINK_GAMEPAD) \
    $(PRE_LINK_EVART) \
    $(PRE_LINK_VRPN)

  POST_LINK_LINE_EXE += \
    $(POST_LINK_BIRDWIN) \
    $(POST_LINK_GAMEPAD) \
    $(POST_LINK_EVART) \
    $(POST_LINK_VRPN)

endif



ALL = \
  $(SZG_CURRENT_DLL) \
  DeviceServer$(EXE) \
  DeviceClient$(EXE) \
  EventTest$(EXE) \
  FaroTest$(EXE) \
  PForthTest$(EXE) \
  pfconsole$(EXE)

# ifneq ($(strip $(SZG_LINKING)), STATIC) 
#   ALL += DeviceServer$(EXE) $(LIBS_DRIVER)
# endif

include $(SZGHOME)/build/make/Makefile.rules

$(SZG_CURRENT_DLL): $(OBJS) $(SZG_LIBRARY_DEPS)
	$(LINK_SZG_LIB)
	$(COPY)

# Executables

DeviceServer$(OBJ_SUFFIX): DeviceServer.cpp
	$(COMPILER) $(COMPILE_FLAGS) $< $(SZG_INCLUDE) $(DEVICESERVER_INCLUDES)

DeviceServer$(EXE): DeviceServer$(OBJ_SUFFIX) $(DEVICESERVER_OBJS) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_EXE_FIRST) $(DEVICESERVER_PRELINK) DeviceServer$(OBJ_SUFFIX) $(DEVICESERVER_OBJS) $(SZG_EXE_SECOND) $(DEVICESERVER_POSTLINK)
	$(COPY)

DeviceClient$(EXE): DeviceClient$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_EXE_FIRST) DeviceClient$(OBJ_SUFFIX) $(SZG_EXE_SECOND)
	$(COPY)

FaroTest$(EXE): FaroTest$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_EXE_FIRST) FaroTest$(OBJ_SUFFIX) $(SZG_EXE_SECOND)
	$(COPY)

EventTest$(EXE): EventTest$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_EXE_FIRST) EventTest$(OBJ_SUFFIX) $(SZG_EXE_SECOND)
	$(COPY)

PForthTest$(EXE): PForthTest$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_EXE_FIRST) PForthTest$(OBJ_SUFFIX) $(SZG_EXE_SECOND)
	$(COPY)

pfconsole$(EXE): pfconsole$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_EXE_FIRST) pfconsole$(OBJ_SUFFIX) $(SZG_EXE_SECOND)
	$(COPY)

# Device-driver shared objects for DeviceServer.

# Shared objects using only Syzygy internals like RS232.

arPPTDriver$(PLUGIN_SUFFIX): arPPTDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_PLUGIN_FIRST) arPPTDriver$(OBJ_SUFFIX) $(POST_LINK_LINE_EXE)
	$(COPY)

arLogitechDriver$(PLUGIN_SUFFIX): arLogitechDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_PLUGIN_FIRST) arLogitechDriver$(OBJ_SUFFIX) $(POST_LINK_LINE_EXE)
	$(COPY)

arFaroDriver$(PLUGIN_SUFFIX): arFaroDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_PLUGIN_FIRST) arFaroDriver$(OBJ_SUFFIX) $(POST_LINK_LINE_EXE)
	$(COPY)

arFOBDriver$(PLUGIN_SUFFIX): arFOBDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_PLUGIN_FIRST) arFOBDriver$(OBJ_SUFFIX) $(POST_LINK_LINE_EXE)
	$(COPY)

arSharedMemDriver$(PLUGIN_SUFFIX): arSharedMemDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_PLUGIN_FIRST) arSharedMemDriver$(OBJ_SUFFIX) $(POST_LINK_LINE_EXE)
	$(COPY)

arSharedMemSinkDriver$(PLUGIN_SUFFIX): arSharedMemSinkDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_PLUGIN_FIRST) arSharedMemSinkDriver$(OBJ_SUFFIX) \
$(POST_LINK_LINE_EXE)
	$(COPY)

arUSBDriver$(PLUGIN_SUFFIX): arUSBDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_PLUGIN_FIRST) arUSBDriver$(OBJ_SUFFIX) $(POST_LINK_TIMER) $(POST_LINK_LINE_EXE)
	$(COPY)

arReactionTimerDriver$(PLUGIN_SUFFIX): arReactionTimerDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_PLUGIN_FIRST) arReactionTimerDriver$(OBJ_SUFFIX) $(POST_LINK_LINE_EXE)
	$(COPY)

arMotionstarDriver$(PLUGIN_SUFFIX): arMotionstarDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_PLUGIN_FIRST) arMotionstarDriver$(OBJ_SUFFIX) $(POST_LINK_LINE_EXE)
	$(COPY)

arSpacepadDriver$(PLUGIN_SUFFIX): arSpacepadDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_PLUGIN_FIRST) arSpacepadDriver$(OBJ_SUFFIX) $(POST_LINK_LINE_EXE)
	$(COPY)

# Shared objects using things beyond Syzygy's core.
# Darwin needs LINK_FLAGS_PLUGIN.

arBirdWinDriver$(OBJ_SUFFIX): arBirdWinDriver.cpp
	$(COMPILER) $(COMPILE_FLAGS) $< $(SZG_INCLUDE) $(SZG_INCLUDE_WIN_BIRD)

arBirdWinDriver$(PLUGIN_SUFFIX): arBirdWinDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(LINKER) $(PRE_LINK_BIRDWIN) $(PRE_LINK_LINE_EXE) \
$(LINK_FLAGS_PLUGIN) $(LINK_PREFIX)arBirdWinDriver$(PLUGIN_SUFFIX) \
arBirdWinDriver$(OBJ_SUFFIX) $(POST_LINK_BIRDWIN) $(POST_LINK_LINE_EXE)
	$(COPY)

arIntelGamepadDriver$(PLUGIN_SUFFIX): arIntelGamepadDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(LINKER) $(PRE_LINK_GAMEPAD) $(PRE_LINK_LINE_EXE) \
$(LINK_FLAGS_PLUGIN) $(LINK_PREFIX)arIntelGamepadDriver$(PLUGIN_SUFFIX) \
arIntelGamepadDriver$(OBJ_SUFFIX) $(POST_LINK_GAMEPAD) $(POST_LINK_LINE_EXE)
	$(COPY)

arJoystickDriver$(PLUGIN_SUFFIX): arJoystickDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(LINKER) $(PRE_LINK_GAMEPAD) $(PRE_LINK_LINE_EXE) \
$(LINK_FLAGS_PLUGIN) $(LINK_PREFIX)arJoystickDriver$(PLUGIN_SUFFIX) \
arJoystickDriver$(OBJ_SUFFIX) $(POST_LINK_GAMEPAD) $(POST_LINK_LINE_EXE)
	$(COPY)

arEVaRTDriver$(OBJ_SUFFIX): arEVaRTDriver.cpp
	$(COMPILER) $(COMPILE_FLAGS) $< $(SZG_INCLUDE) $(SZG_INCLUDE_EVART)

arEVaRTDriver$(PLUGIN_SUFFIX): arEVaRTDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(LINKER) $(PRE_LINK_EVART) $(PRE_LINK_LINE_EXE) $(LINK_FLAGS_PLUGIN) \
$(LINK_PREFIX)arEVaRTDriver$(PLUGIN_SUFFIX) arEVaRTDriver$(OBJ_SUFFIX) \
$(POST_LINK_EVART) $(POST_LINK_LINE_EXE)
	$(COPY)

arVRPNDriver$(OBJ_SUFFIX): arVRPNDriver.cpp
	$(COMPILER) $(COMPILE_FLAGS) $< $(SZG_INCLUDE) $(SZG_INCLUDE_VRPN)

arVRPNDriver$(PLUGIN_SUFFIX): arVRPNDriver$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(LINKER) $(PRELINK_VRPN) $(PRE_LINK_LINE_EXE) $(LINK_FLAGS_PLUGIN) \
$(LINK_PREFIX)arVRPNDriver$(PLUGIN_SUFFIX) arVRPNDriver$(OBJ_SUFFIX) \
$(POST_LINK_VRPN) $(POST_LINK_LINE_EXE)
	$(COPY)

arIntersenseDriver$(PLUGIN_SUFFIX): arIntersenseDriver$(OBJ_SUFFIX) isense$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_PLUGIN_FIRST) arIntersenseDriver$(OBJ_SUFFIX) \
isense$(OBJ_SUFFIX) $(POST_LINK_LINE_EXE)
	$(COPY)

# Shared objects that filter.

arConstantHeadFilter$(PLUGIN_SUFFIX): arConstantHeadFilter$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_PLUGIN_FIRST) arConstantHeadFilter$(OBJ_SUFFIX) $(POST_LINK_LINE_EXE)
	$(COPY)

arTrackCalFilter$(PLUGIN_SUFFIX): arTrackCalFilter$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_PLUGIN_FIRST) arTrackCalFilter$(OBJ_SUFFIX) $(POST_LINK_LINE_EXE)
	$(COPY)

arFaroCalFilter$(PLUGIN_SUFFIX): arFaroCalFilter$(OBJ_SUFFIX) $(SZG_CURRENT_DLL) $(SZG_LIBRARY_DEPS)
	$(SZG_PLUGIN_FIRST) arFaroCalFilter$(OBJ_SUFFIX) $(POST_LINK_LINE_EXE)
	$(COPY)
