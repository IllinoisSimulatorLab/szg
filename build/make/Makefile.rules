.SUFFIXES : .obj .cpp .c .o .so .lib .dll

.cpp$(OBJ_SUFFIX):
	$(COMPILER) $(COMPILE_FLAGS) $< $(SZG_INCLUDE)

.c$(OBJ_SUFFIX):
	$(COMPILER) $(COMPILE_FLAGS) $< $(SZG_INCLUDE)

# Each Makefile.whatever lists all its targets in $ALL.
Everything: $(ALL)

# Copy all files produced by the local make to the "install" dir.
# Move any shared files needed there as well.
#
# On Windows, if the local make produces a new library (like szg or vmat do)
# copy that .lib to $(INSTALLDIR)/lib (SZG_LIB_COPY_LINE).
#
# If shared libs use sonames (like linux), build symlinks in the install dir.
#
# Create the install dir if it's missing.  (How do we do that in Windows?)

create-sdk: Everything
ifneq ($(strip $(MACHINE)), WIN32)
	mkdir -p $(INSTALLDIR)/bin
endif
	$(CP) $(ALL) $(SZG_SHARED_COPY_LOCAL) $(INSTALLDIR)/bin
	$(SZG_LIB_COPY_LINE)
	cd $(INSTALLDIR)/bin; $(SZG_SHARED_COPY_ACTION_LOCAL)

# Install everything into SZG_BINDIR, including files built locally
# plus any external libraries used by the local project.
# Use SZG_SHARED_COPY_LOCAL instead of SZG_SHARED_COPY
# (which Makefile.os defines as ALL used shared libraries).

bin-install: Everything
	$(CP) $(ALL) $(SZG_SHARED_COPY_LOCAL) $(SZG_BINDIR)
	cd $(SZG_BINDIR); $(SZG_SHARED_COPY_ACTION_LOCAL)

# Install into SZG_BINDIR only the external libs used by the local project.
# This target doesn't depend on the code getting built, unlike the previous two.

install-shared:
	$(CP) $(SZG_SHARED_COPY_LOCAL) $(SZG_BINDIR)
	cd $(SZG_BINDIR); $(SZG_SHARED_COPY_ACTION_LOCAL)

# Remove build-related files from the build dir and the binary dir.
# Clean up any text-editor *~ files in the src dir.
# File extensions are named explicitly for safety; not e.g. OBJ_SUFFIX,
# lest that be accidentally undefined.

clean:
	rm -rf *.obj *.o *.exp *.lib *.dll *.so *.a *.ilk *.pdb *.pch \
        .nfs* $(SRCDIR)/*~ \
	$(ALL) $(patsubst %, $(SZG_BINDIR)/%, $(ALL)) \
	$(SZG_BINDIR)/core $(SZG_BINDIR)/.nfs* ii_files core
