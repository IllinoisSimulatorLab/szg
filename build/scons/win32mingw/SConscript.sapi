import os
import sys

Import('szgEnv','externalFlags')

extPath = os.environ['SZGEXTERNAL'].replace('\\','/')+'/'+sys.platform+'/'


# parameters specific to this library
name = 'sapi'
includePath = extPath+'sapi-5.1/include'
libPath = extPath+'sapi-5.1/lib'
ccFlag = '-D EnableSpeech'
libNames = ['ole32','sapi']
headerName = 'sapi.h'
checkFailMessage = "Didn't find optional SAPI library; speech disabled."

# boileplate code that should be pretty much common to all libraries
# (may factor it out later).
flags = {
    'CPPPATH':[includePath], 'LIBPATH':[libPath], 'LIBS':libNames
    }

if ccFlag:
  flags['CCFLAGS'] = [ccFlag]

testEnv = szgEnv.Clone()
testEnv.MergeFlags( flags )
conf = Configure( testEnv )
if not conf.CheckLibWithHeader( libNames[1], headerName, 'c' ):
  print checkFailMessage
  externalFlags[name] = {}
else:
  externalFlags[name] = flags
conf.Finish()

