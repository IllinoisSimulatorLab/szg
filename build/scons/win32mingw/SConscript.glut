import os
import sys

Import('szgEnv','externalFlags')

extPath = os.environ['SZGEXTERNAL'].replace('\\','/')+'/'+sys.platform+'/'


# parameters specific to this library
name = 'glut'
includePath = extPath+'freeglut-2.4.0-mingw/include'
libPath = extPath+'freeglut-2.4.0-mingw/lib'
headerName = 'GL/glut.h'
checkFailMessage = "Didn't find required freeglut; You can't build past drivers directory."

# For use with freeglut.dll
libName = 'freeglut'
ccFlag = ''

# For use with static freeglut library.
#libName = 'freeglut_static'
#ccFlag = '-F FREEGLUT_STATIC'

# boileplate code that should be pretty much common to all libraries
# (may factor it out later).
flags = {
    'CPPPATH':[includePath], 'LIBPATH':[libPath], 'LIBS':[libName]
    }

if ccFlag:
  flags['CCFLAGS'] = [ccFlag]

testEnv = szgEnv.Clone()
testEnv.MergeFlags( flags )
conf = Configure( testEnv )
if not conf.CheckLibWithHeader( libName, headerName, 'c' ):
  print checkFailMessage
  externalFlags[name] = {}
else:
  externalFlags[name] = flags
conf.Finish()
