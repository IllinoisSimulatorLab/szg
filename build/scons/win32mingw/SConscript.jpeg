import os
import sys

Import('szgEnv','externalFlags')

extPath = os.environ['SZGEXTERNAL'].replace('\\','/')+'/'+sys.platform+'/'

# parameters specific to this library
name = 'jpeg'
includePath = extPath+'jpeg-mingw/include'
libPath = extPath+'jpeg-mingw/lib'
ccFlag = '-D EnableJPEG'
libName = 'jpeg'
headerName = 'jpeglib.h'
checkFailMessage = "Didn't find optional jpeg library or jpeglib.h header; jpeg support disabled."

# boilerplate code that should be pretty much common to all libraries
# (may factor it out later).
flags = {
    'CPPPATH':[includePath], 'LIBPATH':[libPath], 'LIBS':[libName]
    }

if ccFlag:
  flags['CCFLAGS'] = [ccFlag]


# The standard SCons check code fails incorrectly for no apparent
# reason.
libFilename = 'libjpeg.a'
msg = 'Checking for C library jpeg... '
if os.path.exists( includePath+'/'+headerName ) and os.path.exists( libPath + '/' +libFilename ):
  externalFlags[name] = flags
  msg += 'yes'
  print msg
else:
  msg += 'no'
  print msg
  print checkFailMessage
  externalFlags[name] = {}

#testEnv = szgEnv.Clone()
#testEnv.MergeFlags( flags )
#conf = Configure( testEnv )
#if not conf.CheckLibWithHeader( libName, headerName, 'c' ):
#  print checkFailMessage
#  externalFlags[name] = {}
#else:
#  externalFlags[name] = flags
#conf.Finish()

