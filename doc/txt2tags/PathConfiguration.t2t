Header1 Specifying Resource Paths
Header2
%%mtime(%m/%d/%Y)
%!options: --headers --toc

Header3

% Table of Contents
%%toc


=Resource Path Specification=

As part of your [System Configuration SystemConfiguration.html],
you can specify a number of search paths for various kinds of application
data. Each path contains semicolon-delimited directory absolute paths.
Paths are specified in the normal OS-dependent manner, e.g.
'C:\Data' on Windows and
'/home/public/Data' on Linux. (Sadly, Windows build-related
paths need forward slashes while resource paths for running
programs need backward ones. Not our fault. Sorry.)

**IMPORTANT**: Syzygy 1.1 changes how
applications are searched for and where they may look for their data.

+ Executables:
```
SZG_EXEC path directory_path_1;directory_path_2;...
```
  In cluster mode, this it tells the remote execution
  daemon szgd where to look for programs. Before Syzygy 1.1, szgd would only look in
  directories on the search path, and applications had to look
  for their data files in directories on the SZG_DATA path, below. Now szgd
  also looks in the immediate subdirectories
  of directories on the path.  When szgd finds the program, it sets the
  current directory to the directory containing the program. This lets
  a program and its data share the same directory, enabling conventional
  file-reading relative to the program's path.

+ Data:
```
SZG_DATA path directory_path_1;directory_path_2;...
```
  Data files to be found by programs using the ar_fileFind() function
  should be placed in a directory on this path. This is no longer
  necessary, however.

+ Sound files:
```
  SZG_SOUND path directory_path_1;directory_path_2;...
```
   Location of sound files to be loaded by SoundRender. Note that these can also
   be placed with the application, but if so it must inform SoundRender using
   either of the application frameworks' setDataBundlePath() method (see the
   [Programming Programming.html] chapter).

+ Texture maps used in a distributed scene graph program (again, see
  [Programming Programming.html] and to be displayed by szgrender:
```
  SZG_RENDER texture_path directory_path_1;directory_path_2;...
```

+ Texture-mapped fonts:
```
  SZG_RENDER text_path directory_1
```
  **BUG**: This one is not yet semicolon-delimited like the
  others.  It can only be a single directory.
