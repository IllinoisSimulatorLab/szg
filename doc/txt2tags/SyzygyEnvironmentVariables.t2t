Syzygy Documentation: Environment Variables
Integrated Systems Lab
%%mtime(%m/%d/%Y)
%!options: --headers --toc --toc-level=3
%!encoding: iso-8859-1

[Documentation Table of Contents index.html]

%%toc

Syzygy's makefiles use a number of environment variables.
Other environment variables can alter Syzygy's operation,
and szgd will even alter, though not globally, some variables that are
used by the system in general. This document briefly describes them all,
and links to fuller explanations.


=Environment variables affecting the Syzygy build process=

- SZGHOME: Top-level directory of your Syzygy installation, whether
 DEVELOPER (you are compiling the library yourself) or EASY (you are using
 a prepackaged version). This must be set.

- SZGBIN: Where executables and DLLs go.
 Defaults to $(SZGHOME)/bin/$(MACHINE_DIR).

- SZGEXTERNAL: Top-level directory for external libraries.

- SZGDEBUG: By default, software is not built with debugging information.
 By setting this to TRUE, debugging symbols will be built in.

- SZG_DEVELOPER_STYLE: By default, the build process assumes you are
 compiling the software yourself (DEVELOPER). However, if you are using a
 precompiled library, then you MUST set this variable to EASY.

- SZG_MULTITEX: On some platforms, this must be set to false to allow
the q33 demo to build. Consider running cubecake instead of q33 (another
Quake3 level builder).

- SZG_STLPORT: For Windows.
 Visual Studio 6's STL implementation is incompatible with
 dynamically linking the szg libraries. To use Visual Studio 6
 (on Windows), use the STLport implementation of STL. (Set this
 to TRUE). By default, the native STL implementation will be used. This is
 fine for Visual Studio .NET and above.

- SZG_USE_PCH: Again, only meaningful on Windows platforms. By default,
 on these platforms, a pre-compiled header is used to (greatly) speed up
 compilation. However, this can sometimes be a pain when working with code
 produced by a variety of compiler patch levels. Consequently, setting this
 to FALSE negates the use of precompiled headers.

- SZG_LINKING: By default, all the szg libraries are built as shared objects
 (dlls). However, by setting this variable to STATIC, you can have them
 built and linked as static objects. This is good for archiving code.

- SZG_FMOD_VERSION: if set to 3, for audio use the external library
"sound_fmod3" instead of the default, "sound".

=Environment variables affecting the operation of Syzygy components=

- SZG_PARAM: In application standalone mode, if the parameter file
(szg_parameters.txt by default) cannot be opened, try to open this file instead.

- SZG_CONF: The directory storing the computer's config file.
Only set this if the default is unworkable.

- SZG_LOGIN: The directory storing user login (to szgservers) information.
Only set this if the default is unworkable.

- SZGUSER: Run as a different szg user. Overrides dlogin's settings.

- SZGCONTEXT: The values of various options (like virtual computer identity)
packed in a single string.

- SZG_DEX_TIMEOUT: How many seconds szgd waits for an application to launch.
"dex -t" overrides it.

- SZG_DEX_LOCALTIMEOUT: How many seconds dex waits for a reply from szgd.
"dex -lt" overrides it.


=Environment variables that substitute for Phleet database parameters=

- SZG_RENDER_texture_path: Distributed scene graph applications search for
textures here.

- SZG_RENDER_text_path: Distributed scene graph applications search for
their fonts here.

- SZG_SOUND_path: Syzygy applications search for sounds here.

- SZG_DATA_path: Syzygy application data is installed here.

- SZG_PEER_path: Syzygy scene graph files are stored here.


=Environment variables altered locally by szgd=

- PYTHONPATH: szgd manipulates this so that a particular user's Python
modules will be loaded preferentially.

- PATH, LD_LIBRARY_PATH, LD_LIBRARYN32_PATH, DYLD_LIBRARY_PATH: szgd
manipulates these so that shared libraries on its executable path will be
loaded preferentially.

- SZGUSER: Allows running-as another szg user.

- SZGCONTEXT: The values of various options (like virtual computer identity)
packed in a single string.

- SZGPIPEID: Used to communicate back from the launched process to the szgd.

- SZGTRADINGNUM: Used to communicate back from the launched process to the
szgd.


