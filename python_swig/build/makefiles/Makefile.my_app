# Should define VPATH before Makefile.vars inclusion.
INTERFACE_DIR=../../src
VPATH=$(INTERFACE_DIR)

# This project is different enough that we depart from the standard template.
include $(SZGHOME)/build/make/Makefile.vars

MODULE = PySZG

IFILES = PyGraphics.i PyMasterSlave.i PyMath.i PySZG.i PySceneGraph.i \
PyTypemaps.i PySoundAPI.i PyObj.i PyPeer.i PyInteraction.i \
PySZGApp.i PyPhleet.i PyAppLauncher.i PyDataUtilities.i PyInputEvents.i \
PyEventFilter.i

ifeq ($(strip $(MACHINE)),WIN32)
LINK_FLAGS_SHARED += /stack:4000000
endif

SWIG_FLAGS = -module $(MODULE)

ifeq ($(strip $(SWIG_SZGEXPT)),TRUE)
IFILES += PyExperiment.i
include $(SZGEXPT)/build/make/Makefile.szgexpt
SWIG_FLAGS += -DAR_SWIG_SZGEXPT
endif

ALL=$(MODULE).py _$(MODULE)$(PLUGIN_SUFFIX)

all: _$(MODULE)$(PLUGIN_SUFFIX)
	$(CP) $(ALL) $(SZG_BINDIR)

SZG_INCLUDE += -I$(SZG_PYINCLUDE)

ifeq ($(strip $(SZG_COMPILER)),MINGW)
	PRE_LIB_SEARCH_FLAGS += -L$(SZG_PYLIBDIR)
	SZG_OPT_LIBS_FULL += -lPython24
else
	SZG_OPT_LIBS_FULL += $(SZG_PYLIB)
endif

_$(MODULE)$(PLUGIN_SUFFIX): $(MODULE)_wrap$(OBJ_SUFFIX) $(SZG_LIBRARY_DEPS)
	rm -f *$(PLUGIN_SUFFIX)
	$(LINKER) $(PRE_LINK_LINE_USR) $(LINK_FLAGS_PLUGIN) \
        $(LINK_PREFIX)_$(MODULE)$(PLUGIN_SUFFIX) \
	$(MODULE)_wrap$(OBJ_SUFFIX) $(POST_LINK_LINE_USR)

$(MODULE)_wrap$(OBJ_SUFFIX): $(MODULE)_wrap.cxx
	$(COMPILER) $(COMPILE_FLAGS_SHARED) $< $(SZG_INCLUDE)

$(MODULE)_wrap.cxx: $(IFILES)
	swig -c++ -python -o $(MODULE)_wrap.cxx -I$(INTERFACE_DIR) $(SWIG_FLAGS) PySZG.i 

test:
	python test.py

# PLEASE NOTE: py-szg does NOT include Makefile.rules, but instead defines
# create-sdk, bin-install, install-shared, and clean itself. This is
# simply because the clean target is a little bit different than the
# standard one. Also note that we remove all PLUGIN_SUFFIX and
# OBJ_SUFFIX files manually in "clean". This way, we never issue a dangerous
# "rm -f *", even if the Makefiles have been messed up.

create-sdk: all
	$(CP) $(ALL) $(INSTALLDIR)/bin

bin-install: all
	$(CP) $(ALL) $(SZG_BINDIR)

# This particular target doesn't make sense for py-szg, so just include
# something random!
install-shared: all
	$(CP) $(ALL) $(SZG_BINDIR)

clean:
	rm -f *.dll *.so
	rm -f *.obj *.o
	rm -f *.exp
	rm -f *.lib
	rm -f *_wrap.cxx
	rm -f *.py *.pyc
	rm -f $(SZG_BINDIR)/$(MODULE).pyc
	rm -f $(patsubst %, $(SZG_BINDIR)/%, $(ALL))
